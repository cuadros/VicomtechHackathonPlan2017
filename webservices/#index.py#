#!flask/bin/python
from flask import Flask, jsonify, abort, make_response, request
from flask_cors import CORS, cross_origin

from lxml import etree
import os
import sys
from subprocess import Popen, PIPE
import re

import json


#informacion: https://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask



app = Flask(__name__)

CORS(app)
tasks = [
    {
        'id': 1,
        'title': u'Buy groceries',
        'description': u'Milk, Cheese, Pizza, Fruit, Tylenol',
        'done': False
    },
    {
        'id': 2,
        'title': u'Learn Python',
        'description': u'Need to find a good Python tutorial on the web',
        'done': False
    }
]

@app.route('/todo/api/v1.0/tasks/<int:task_id>', methods=['GET'])
def get_task(task_id):
    task = [task for task in tasks if task['id'] == task_id]
    if len(task) == 0:
        abort(404)
    return jsonify({'task': task[0]})

@app.route('/analyze', methods=['POST'])

def create_task():
    if not request.json or not 'title' in request.json:
        abort(400)
    else:
        return parse_file(request.json['analyze'])
#    task = {
#        'id': tasks[-1]['id'] + 1,
#        'title': request.json['title'],
#        'description': request.json.get('description', ""),
#        'done': False
#    }
#    tasks.append(task)montse/
#    return jsonify({'task': task})



@app.errorhandler(404)
def not_found(error):
    return make_response(jsonify({'error': 'Not found'}), 404)

def parse_file(document):

    print "Parsing Document"

    #proba={}
    proba['content']=abreviatures

#    json_data=json.dumps(data)

    json_data=json.dumps(proba)
    return json_data
    #return "joder"



if __name__ == '__main__':
    app.run(host='0.0.0.0',port=5065, debug=True)
